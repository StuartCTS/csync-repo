# TAIWAN
gcloud beta container --project "stuart-dev-example-01" clusters create "taiwan" --zone "asia-east1-a" --no-enable-basic-auth --cluster-version "1.18.16-gke.502" --release-channel "regular" --machine-type "n1-standard-2" --image-type "COS" --disk-type "pd-standard" --disk-size "100" --metadata disable-legacy-endpoints=true --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --num-nodes "3" --no-enable-stackdriver-kubernetes --enable-ip-alias --network "projects/stuart-dev-example-01/global/networks/default" --subnetwork "projects/stuart-dev-example-01/regions/asia-east1/subnetworks/default" --default-max-pods-per-node "110" --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0 --enable-shielded-nodes --node-locations "asia-east1-a"

gcloud container clusters get-credentials taiwan --zone asia-east1-a --project stuart-dev-example-01

# IOWA
gcloud beta container --project "stuart-dev-example-01" clusters create "iowa" --zone "us-central1-c" --no-enable-basic-auth --cluster-version "1.18.16-gke.502" --release-channel "regular" --machine-type "n1-standard-2" --image-type "COS" --disk-type "pd-standard" --disk-size "100" --metadata disable-legacy-endpoints=true --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --num-nodes "3" --no-enable-stackdriver-kubernetes --enable-ip-alias --network "projects/stuart-dev-example-01/global/networks/default" --subnetwork "projects/stuart-dev-example-01/regions/us-central1/subnetworks/default" --default-max-pods-per-node "110" --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0 --enable-shielded-nodes --node-locations "us-central1-c"

gcloud container clusters get-credentials iowa --zone us-central1-c --project stuart-dev-example-01

# BELGIUM
gcloud beta container --project "stuart-dev-example-01" clusters create "belgium" --zone "europe-west1-b" --no-enable-basic-auth --cluster-version "1.18.16-gke.502" --release-channel "regular" --machine-type "n1-standard-2" --image-type "COS" --disk-type "pd-standard" --disk-size "100" --metadata disable-legacy-endpoints=true --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --num-nodes "3" --no-enable-stackdriver-kubernetes --enable-ip-alias --network "projects/stuart-dev-example-01/global/networks/default" --subnetwork "projects/stuart-dev-example-01/regions/europe-west1/subnetworks/default" --default-max-pods-per-node "110" --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0 --enable-shielded-nodes --node-locations "europe-west1-b"

gcloud container clusters get-credentials belgium --zone europe-west1-b --project stuart-dev-example-01

# CICD
gcloud beta container --project "stuart-dev-example-01" clusters create-auto "cicd" --region "europe-west1" --release-channel "regular" --network "projects/stuart-dev-example-01/global/networks/default" --subnetwork "projects/stuart-dev-example-01/regions/europe-west1/subnetworks/default" --cluster-ipv4-cidr "/17" --services-ipv4-cidr "/22"

gcloud container clusters get-credentials cicd --region europe-west1 --project stuart-dev-example-01stuart_barnett@cloudshell:~ (stuart-dev-example-01)$ gcloud container clusters get-credentials cicd --region europe-west1 --project stuart-dev-example-01

# argoCD (installs argo ApplicationSet controller + argocd)
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj-labs/applicationset/v0.1.0/manifests/install-with-argo-cd.yaml


kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

kubectl port-forward svc/argocd-server -n argocd 8080:443 (need this running to use CLI with context)

kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d (current pwd)

argocd login localhost:8080

argocd account update-password

https://localhost:8080/login?return_url=https%3A%2F%2Flocalhost%3A8080%2Fapplications - login admin/(newpwd)

# enrol cluster 
kubectl apply -f csync-repo/samples/clusters/argo_roles.yaml

secret_name=$(kubectl -n kube-system get sa argocd -o go-template='{{range .secrets}}{{.name}}{{"\n"}}{{end}}')
echo $secret_name

kubectl -n kube-system get secrets ${secret_name} -o go-template='{{index .data "ca.crt"}}'
kubectl -n kube-system get secrets ${secret_name} -o go-template='{{.data.token}}' | base64 -d

# set context to cicd cluster first
kubectl apply -f csync-repo/samples/clusters/argo_<your_cluster>_secret.yaml -n argocd

#app set
kubectl apply -f csync-repo/samples/clusters/app_set.yaml -n argocd (you may need to create ns first)